%{
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    int intValue;
    char* strValue;
} YYSTYPE;

#define YYSTYPE YYSTYPE

extern int yylex();
extern int yyparse();
extern FILE* yyin;

%}

%token POUSAR DECOLAR AJUSTAR_ANGULO ATIVAR_FOGUETE ALINHAMENTO_ORBITA AJUSTAR_POSICAO
%token VAR PRINT IF ELSE LOOP LESS_THAN GREATER_THAN EQUAL PLUS MINUS MULTIPLY DIVIDE
%token LPAREN RPAREN COMMA LBRACE RBRACE NEWLINE INT IDENTIFIER

%union {
    int intValue;
    char* strValue;
}

%type <intValue> INT
%type <strValue> IDENTIFIER

%start PROGRAM

%%

PROGRAM : STATEMENT;

BLOCK : LBRACE STATEMENT RBRACE;

STATEMENT : NEWLINE
          | ASSIGNMENT NEWLINE
          | PRINT LPAREN EXPRESSION RPAREN NEWLINE
          | VARIABLE NEWLINE
          | FLIGHT_CONTROLLER NEWLINE
          | SPACIAL_COMANDS NEWLINE;

FLIGHT_CONTROLLER : POUSAR | DECOLAR | AJUSTAR_ANGULO;

SPACIAL_COMANDS : ATIVAR_FOGUETE LPAREN INT RPAREN
               | ALINHAMENTO_ORBITA LPAREN INT RPAREN
               | AJUSTAR_POSICAO LPAREN COORDINATES RPAREN;

VARIABLE : VAR IDENTIFIER NEWLINE;

ASSIGNMENT : IDENTIFIER EQUAL EXPRESSION;

PRINT : PRINT LPAREN EXPRESSION RPAREN;

IF : IF LPAREN BOOLEXP RPAREN BLOCK (ELSE BLOCK)?;

LOOP : LOOP LPAREN BOOLEXP RPAREN BLOCK;

BOOLEXP : EXPRESSION
        | EXPRESSION LESS_THAN EXPRESSION
        | EXPRESSION GREATER_THAN EXPRESSION
        | EXPRESSION EQUAL EXPRESSION;

EXPRESSION : TERM
           | EXPRESSION PLUS TERM
           | EXPRESSION MINUS TERM;

TERM : FACTOR
     | TERM MULTIPLY FACTOR
     | TERM DIVIDE FACTOR;

FACTOR : PLUS FACTOR
       | MINUS FACTOR
       | INT
       | LPAREN EXPRESSION RPAREN
       | IDENTIFIER;

TYPE : INT | COORDINATES | TIME;

COORDINATES : LPAREN INT COMMA INT COMMA RPAREN;

IDENTIFIER : LETTER (LETTER | DIGIT | "_")*;

TIME : INT "s" | INT "m" | INT "h";

INT : DIGIT+;

LETTER : [a-zA-Z];

DIGIT : [0-9];

%%