%{
#include <stdio.h>

extern int yylex();
void yyerror(const char *s) {printf("ERRO: %s\n", s);}

%}

%token POUSAR DECOLAR AJUSTAR_ANGULO ATIVAR_FOGUETE ALINHAMENTO_ORBITA AJUSTAR_POSICAO
%token VAR PRINTLN IF ELSE LOOP LESS_THAN GREATER_THAN EQUAL PLUS MINUS MULTIPLY DIVIDE
%token LPAREN RPAREN COMMA LBRACE RBRACE NEWLINE INT IDEN TIME

%union {
    int intValue;
    char* strValue;
}

%start PROGRAM

%%

PROGRAM : STATEMENT;

BLOCK : LBRACE STATEMENT RBRACE;

STATEMENT : NEWLINE
          | ASSIGNMENT NEWLINE
          | PRINT NEWLINE
          | VARIABLE NEWLINE
          | FLIGHT_CONTROLLER NEWLINE
          | SPACIAL_COMANDS NEWLINE;

FLIGHT_CONTROLLER : POUSAR | DECOLAR | AJUSTAR_ANGULO;

SPACIAL_COMANDS : ATIVAR_FOGUETE LPAREN INT RPAREN
               | ALINHAMENTO_ORBITA LPAREN INT RPAREN
               | AJUSTAR_POSICAO LPAREN COORDINATES RPAREN;

VARIABLE : VAR IDEN NEWLINE;

ASSIGNMENT : IDEN EQUAL EXPRESSION;

PRINT: PRINTLN LPAREN EXPRESSION RPAREN;

IF_STATEMENT : IF LPAREN BOOLEXP RPAREN BLOCK
        | IF LPAREN BOOLEXP RPAREN BLOCK ELSE BLOCK;

LOOP_STATEMENT : LOOP LPAREN BOOLEXP RPAREN BLOCK;

BOOLEXP : EXPRESSION
        | EXPRESSION LESS_THAN EXPRESSION
        | EXPRESSION GREATER_THAN EXPRESSION
        | EXPRESSION EQUAL EXPRESSION;

EXPRESSION : TERM
           | EXPRESSION PLUS TERM
           | EXPRESSION MINUS TERM;

TERM : FACTOR
     | TERM MULTIPLY FACTOR
     | TERM DIVIDE FACTOR;

FACTOR : PLUS FACTOR
       | MINUS FACTOR
       | INT
       | LPAREN EXPRESSION RPAREN
       | IDEN;

TYPE : INT | COORDINATES | TIME;

COORDINATES : LPAREN INT COMMA INT COMMA RPAREN;

%%
